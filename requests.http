@ApiBaseUrl = http://localhost:5280
@MockApiBaseUrl = http://localhost:8080

GET {{ApiBaseUrl}}/health
Accept: application/json

###

# @name login
POST {{ApiBaseUrl}}/api/login
Content-Type: application/json

{
  "email": "admin@example.com",
  "password": "admin123"
}


###

# @name allProducts
GET {{ApiBaseUrl}}/api/products
Accept: application/json
Authorization: Bearer {{login.response.body.token}}

###

# @name oneProduct
GET {{ApiBaseUrl}}/api/products/1
Accept: application/json
Authorization: Bearer {{login.response.body.token}}

###

# @name createProduct
POST {{ApiBaseUrl}}/api/products
Content-Type: application/json
Authorization: Bearer {{login.response.body.token}}

{
  "name": "Test Product",
  "description": "A test product for API testing",
  "price": 19.99
}

###

# @name updateProduct
PUT {{ApiBaseUrl}}/api/products/1
Content-Type: application/json
Authorization: Bearer {{login.response.body.token}}

{
  "name": "Updated Product Name",
  "description": "Updated description for the product",
  "price": 29.99
}

###

# @name deleteProduct
DELETE {{ApiBaseUrl}}/api/products/1
Authorization: Bearer {{login.response.body.token}}

###

# @name getNonExistingProduct
GET {{ApiBaseUrl}}/api/products/999
Accept: application/json
Authorization: Bearer {{login.response.body.token}}

###

# @name updateNonExistingProduct
PUT {{ApiBaseUrl}}/api/products/999
Content-Type: application/json
Authorization: Bearer {{login.response.body.token}}

{
  "name": "Non-existent Product",
  "description": "This should fail",
  "price": 99.99
}

###

# @name deleteNonExistingProduct
DELETE {{ApiBaseUrl}}/api/products/999
Authorization: Bearer {{login.response.body.token}}
